import AsyncStorage from '@react-native-async-storage/async-storage';

// u041au043eu043du0441u0442u0430u043du0442u044b u0434u043bu044f u043au043bu044eu0447u0435u0439 u0445u0440u0430u043du0438u043bu0438u0449u0430
const KEYS = {
  FOOD_PHOTOS: 'food_photos',
};

/**
 * u0422u0438u043f u0434u043bu044f u0445u0440u0430u043du0435u043du0438u044f u0434u0430u043du043du044bu0445 u043e u0444u043eu0442u043eu0433u0440u0430u0444u0438u0438 u0435u0434u044b
 */
export interface FoodPhoto {
  id: string;       // u0423u043du0438u043au0430u043bu044cu043du044bu0439 u0438u0434u0435u043du0442u0438u0444u0438u043au0430u0442u043eu0440 u0444u043eu0442u043e
  uri: string;      // Firebase Storage URI 
  localUri?: string; // u041bu043eu043au0430u043bu044cu043du044bu0439 URI (u0435u0441u043bu0438 u0435u0441u0442u044c)
  timestamp: number; // u0412u0440u0435u043cu044f u0441u043eu0437u0434u0430u043du0438u044f
  productId?: string; // ID u043fu0440u043eu0434u0443u043au0442u0430 (u0435u0441u043bu0438 u0441u0432u044fu0437u0430u043d u0441 u043fu0440u043eu0434u0443u043au0442u043eu043c)
  productName?: string; // u041du0430u0437u0432u0430u043du0438u0435 u043fu0440u043eu0434u0443u043au0442u0430 (u0435u0441u043bu0438 u0438u0437u0432u0435u0441u0442u043du043e)
}

/**
 * u0421u043eu0445u0440u0430u043du044fu0435u0442 u0438u043du0444u043eu0440u043cu0430u0446u0438u044e u043e u0444u043eu0442u043eu0433u0440u0430u0444u0438u0438 u0435u0434u044b u0432 u043bu043eu043au0430u043bu044cu043du043eu0435 u0445u0440u0430u043du0438u043bu0438u0449u0435
 * @param photo u0414u0430u043du043du044bu0435 u043e u0444u043eu0442u043eu0433u0440u0430u0444u0438u0438
 */
export const saveFoodPhoto = async (photo: FoodPhoto): Promise<void> => {
  try {
    // u041fu043eu043bu0443u0447u0430u0435u043c u0442u0435u043au0443u0449u0438u0435 u0444u043eu0442u043eu0433u0440u0430u0444u0438u0438
    const currentPhotos = await getFoodPhotos();
    
    // u0414u043eu0431u0430u0432u043bu044fu0435u043c u043du043eu0432u0443u044e u0444u043eu0442u043eu0433u0440u0430u0444u0438u044e
    const updatedPhotos = [photo, ...currentPhotos];
    
    // u0421u043eu0445u0440u0430u043du044fu0435u043c u043eu0431u043du043eu0432u043bu0435u043du043du044bu0439 u0441u043fu0438u0441u043eu043a
    await AsyncStorage.setItem(KEYS.FOOD_PHOTOS, JSON.stringify(updatedPhotos));
    
    console.log('u0424u043eu0442u043eu0433u0440u0430u0444u0438u044f u0443u0441u043fu0435u0448u043du043e u0441u043eu0445u0440u0430u043du0435u043du0430 u0432 u043bu043eu043au0430u043bu044cu043du043eu0435 u0445u0440u0430u043du0438u043bu0438u0449u0435');
  } catch (error) {
    console.error('u041eu0448u0438u0431u043au0430 u043fu0440u0438 u0441u043eu0445u0440u0430u043du0435u043du0438u0438 u0444u043eu0442u043eu0433u0440u0430u0444u0438u0438:', error);
    throw error;
  }
};

/**
 * u041fu043eu043bu0443u0447u0430u0435u0442 u0432u0441u0435 u0441u043eu0445u0440u0430u043du0435u043du043du044bu0435 u0444u043eu0442u043eu0433u0440u0430u0444u0438u0438 u0435u0434u044b u0438u0437 u043bu043eu043au0430u043bu044cu043du043eu0433u043e u0445u0440u0430u043du0438u043bu0438u0449u0430
 * @returns u041cu0430u0441u0441u0438u0432 u0444u043eu0442u043eu0433u0440u0430u0444u0438u0439
 */
export const getFoodPhotos = async (): Promise<FoodPhoto[]> => {
  try {
    const photos = await AsyncStorage.getItem(KEYS.FOOD_PHOTOS);
    return photos ? JSON.parse(photos) : [];
  } catch (error) {
    console.error('u041eu0448u0438u0431u043au0430 u043fu0440u0438 u043fu043eu043bu0443u0447u0435u043du0438u0438 u0444u043eu0442u043eu0433u0440u0430u0444u0438u0439:', error);
    return [];
  }
};

/**
 * u0423u0434u0430u043bu044fu0435u0442 u0444u043eu0442u043eu0433u0440u0430u0444u0438u044e u0435u0434u044b u0438u0437 u043bu043eu043au0430u043bu044cu043du043eu0433u043e u0445u0440u0430u043du0438u043bu0438u0449u0430
 * @param photoId ID u0444u043eu0442u043eu0433u0440u0430u0444u0438u0438 u0434u043bu044f u0443u0434u0430u043bu0435u043du0438u044f
 */
export const deleteFoodPhoto = async (photoId: string): Promise<void> => {
  try {
    // u041fu043eu043bu0443u0447u0430u0435u043c u0442u0435u043au0443u0449u0438u0435 u0444u043eu0442u043eu0433u0440u0430u0444u0438u0438
    const currentPhotos = await getFoodPhotos();
    
    // u0424u0438u043bu044cu0442u0440u0443u0435u043c u0441u043fu0438u0441u043eu043a, u0443u0434u0430u043bu044fu044f u0444u043eu0442u043eu0433u0440u0430u0444u0438u044e u0441 u0443u043au0430u0437u0430u043du043du044bu043c ID
    const updatedPhotos = currentPhotos.filter(photo => photo.id !== photoId);
    
    // u0421u043eu0445u0440u0430u043du044fu0435u043c u043eu0431u043du043eu0432u043bu0435u043du043du044bu0439 u0441u043fu0438u0441u043eu043a
    await AsyncStorage.setItem(KEYS.FOOD_PHOTOS, JSON.stringify(updatedPhotos));
    
    console.log('u0424u043eu0442u043eu0433u0440u0430u0444u0438u044f u0443u0441u043fu0435u0448u043du043e u0443u0434u0430u043bu0435u043du0430 u0438u0437 u043bu043eu043au0430u043bu044cu043du043eu0433u043e u0445u0440u0430u043du0438u043bu0438u0449u0430');
  } catch (error) {
    console.error('u041eu0448u0438u0431u043au0430 u043fu0440u0438 u0443u0434u0430u043bu0435u043du0438u0438 u0444u043eu0442u043eu0433u0440u0430u0444u0438u0438:', error);
    throw error;
  }
};

/**
 * u041eu0431u043du043eu0432u043bu044fu0435u0442 u0438u043du0444u043eu0440u043cu0430u0446u0438u044e u043e u0444u043eu0442u043eu0433u0440u0430u0444u0438u0438 u0435u0434u044b u0432 u043bu043eu043au0430u043bu044cu043du043eu043c u0445u0440u0430u043du0438u043bu0438u0449u0435
 * @param photoId ID u0444u043eu0442u043eu0433u0440u0430u0444u0438u0438 u0434u043bu044f u043eu0431u043du043eu0432u043bu0435u043du0438u044f
 * @param updatedData u041eu0431u043du043eu0432u043bu0435u043du043du044bu0435 u0434u0430u043du043du044bu0435
 */
export const updateFoodPhoto = async (photoId: string, updatedData: Partial<FoodPhoto>): Promise<void> => {
  try {
    // u041fu043eu043bu0443u0447u0430u0435u043c u0442u0435u043au0443u0449u0438u0435 u0444u043eu0442u043eu0433u0440u0430u0444u0438u0438
    const currentPhotos = await getFoodPhotos();
    
    // u041du0430u0445u043eu0434u0438u043c u0438u043du0434u0435u043au0441 u0444u043eu0442u043eu0433u0440u0430u0444u0438u0438 u0434u043bu044f u043eu0431u043du043eu0432u043bu0435u043du0438u044f
    const photoIndex = currentPhotos.findIndex(photo => photo.id === photoId);
    
    if (photoIndex !== -1) {
      // u041eu0431u043du043eu0432u043bu044fu0435u043c u0434u0430u043du043du044bu0435 u0444u043eu0442u043eu0433u0440u0430u0444u0438u0438
      currentPhotos[photoIndex] = {
        ...currentPhotos[photoIndex],
        ...updatedData
      };
      
      // u0421u043eu0445u0440u0430u043du044fu0435u043c u043eu0431u043du043eu0432u043bu0435u043du043du044bu0439 u0441u043fu0438u0441u043eu043a
      await AsyncStorage.setItem(KEYS.FOOD_PHOTOS, JSON.stringify(currentPhotos));
      
      console.log('u0424u043eu0442u043eu0433u0440u0430u0444u0438u044f u0443u0441u043fu0435u0448u043du043e u043eu0431u043du043eu0432u043bu0435u043du0430 u0432 u043bu043eu043au0430u043bu044cu043du043eu043c u0445u0440u0430u043du0438u043bu0438u0449u0435');
    } else {
      console.warn('u0424u043eu0442u043eu0433u0440u0430u0444u0438u044f u0434u043bu044f u043eu0431u043du043eu0432u043bu0435u043du0438u044f u043du0435 u043du0430u0439u0434u0435u043du0430');
    }
  } catch (error) {
    console.error('u041eu0448u0438u0431u043au0430 u043fu0440u0438 u043eu0431u043du043eu0432u043bu0435u043du0438u0438 u0444u043eu0442u043eu0433u0440u0430u0444u0438u0438:', error);
    throw error;
  }
};
