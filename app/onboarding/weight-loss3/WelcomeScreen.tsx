import { Ionicons } from '@expo/vector-icons';
import React, { useEffect } from 'react';
import { Text, View } from 'react-native';
import { useTranslation } from '../../../i18n/i18n';
import { forceUpdatePushToken } from '../../../services/pushNotifications';
import { initializeUser } from '../../../services/userService';
import { OnboardingLayout } from './unifiedLayouts';
import { usePalette, useProgramStyles, useTypographyStyles } from './unifiedStyles';

interface WelcomeScreenProps {
  onContinue: () => void;
  onBack?: () => void;
}

const WelcomeScreen: React.FC<WelcomeScreenProps> = ({ onContinue, onBack }) => {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö—É–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —Å—Ç–∏–ª–µ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã
  const palette = usePalette();
  const programStyles = useProgramStyles();
  const typography = useTypographyStyles();
  const { t } = useTranslation();

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º webhook –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ Welcome —ç–∫—Ä–∞–Ω–∞
  // –≠—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    const registerUserOnWelcome = async () => {
      try {
        console.log('üéâ Welcome —ç–∫—Ä–∞–Ω –æ—Ç–∫—Ä—ã—Ç, —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π ID –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        await initializeUser();
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º push —Ç–æ–∫–µ–Ω (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
        // –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É webhook —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º userId
        setTimeout(async () => {
          try {
            await forceUpdatePushToken();
            console.log('‚úÖ Push —Ç–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω —Å Welcome —ç–∫—Ä–∞–Ω–∞');
          } catch (error) {
            console.log('‚ö†Ô∏è Push —Ç–æ–∫–µ–Ω –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω):', error);
          }
        }, 1000); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ Welcome —ç–∫—Ä–∞–Ω–µ:', error);
      }
    };

    registerUserOnWelcome();
  }, []);

  return (
    <OnboardingLayout
      title={t('onboarding.welcome.title')}
      subtitle={t('onboarding.welcome.subtitle')}
      onContinue={onContinue}
      onBack={onBack}
      hideBackButton={true}
    >
      <View style={programStyles.container}>
        <Text style={[typography.optionTitle, programStyles.title]}>{t('onboarding.welcome.program')}</Text>
              
        <View style={programStyles.steps}>
          <View style={programStyles.step}>
            <View style={programStyles.iconContainer}>
              <Ionicons name="scale-outline" size={36} color={palette.primary} />
            </View>
            <Text style={programStyles.stepText}>
              {t('onboarding.welcome.steps.weightGoal')}
            </Text>
          </View>
          
          <View style={programStyles.step}>
            <View style={programStyles.iconContainer}>
              <Ionicons name="calculator-outline" size={36} color={palette.primary} />
            </View>
            <Text style={programStyles.stepText}>
              {t('onboarding.welcome.steps.calories')}
            </Text>
          </View>
          
          <View style={programStyles.step}>
            <View style={programStyles.iconContainer}>
              <Ionicons name="calendar-outline" size={36} color={palette.primary} />
            </View>
            <Text style={programStyles.stepText}>
              {t('onboarding.welcome.steps.mealSchedule')}
            </Text>
          </View>
          
          <View style={programStyles.step}>
            <View style={programStyles.iconContainer}>
              <Ionicons name="nutrition-outline" size={36} color={palette.primary} />
            </View>
            <Text style={programStyles.stepText}>
              {t('onboarding.welcome.steps.nutrition')}
            </Text>
          </View>
          
          <View style={programStyles.step}>
            <View style={programStyles.iconContainer}>
              <Ionicons name="fitness-outline" size={36} color={palette.primary} />
            </View>
            <Text style={programStyles.stepText}>
              {t('onboarding.welcome.steps.exercise')}
            </Text>
          </View>
          
          <View style={programStyles.step}>
            <View style={programStyles.iconContainer}>
              <Ionicons name="analytics-outline" size={36} color={palette.primary} />
            </View>
            <Text style={programStyles.stepText}>
              {t('onboarding.welcome.steps.progress')}
            </Text>
          </View>
        </View>
      </View>
    </OnboardingLayout>
  );
};

// –õ–æ–∫–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è - –≤—Å–µ —Å—Ç–∏–ª–∏ –≤—ã–Ω–µ—Å–µ–Ω—ã –≤ —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–æ–¥—É–ª—å unifiedStyles.ts

export default WelcomeScreen;
