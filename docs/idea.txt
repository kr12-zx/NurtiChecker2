### Идея приложения

Это приложение для контроля потребления калорий и мониторинга аллергенов, которое помогает пользователю следить за своим питанием и здоровьем. Оно позволяет:

1. **Учёт калорийности продуктов**: Пользователь может сканировать продукты с помощью камеры и получать информацию о калориях, макронутриентах (белки, углеводы, жиры) и витаминах. Приложение вычисляет, сколько калорий нужно потреблять пользователю в день, в зависимости от его целей (похудение, поддержание веса, набор массы). Приложение отслеживает, набирает ли пользователь калории или не достигает своей цели.

2. **Проверка аллергенов и вредных веществ**: Каждый отсканированный продукт проверяется на наличие аллергенов и вредных веществ. Это особенно полезно для людей, страдающих от пищевых аллергий или чувствительных к определенным веществам. Приложение дает подробную информацию о содержании аллергенов в продукте и может предложить альтернативы или замены для безопасного питания.

### Обновленный план разработки

Теперь, когда мы описали идею приложения, вот обновленный план, который включает все необходимые экраны и логику:

### 1. **Экран сплэша**

* **Цель:** Показать пользователю логотип или анимацию бренда при запуске приложения.
* **Дизайн:** Логотип на фоне светлого экрана. Продолжительность — 2-3 секунды.
* **Логика:** После сплэша приложение автоматически определяет язык, установленный в системе устройства, и устанавливает его в приложении. Затем приложение передает этот язык в N8n, чтобы нейросеть, обрабатывающая фото, могла отвечать на языке пользователя.

### 2. **Экран онбординга**

* **Цель:** Представить приложение и его основные функции.
* **Дизайн:** Три экрана с изображениями и краткими описаниями:

  * 1 экран — изображение с текстом "Добро пожаловать в приложение для контроля калорий и аллергентов".
  * 2 экран — "Сканируйте продукты и получите информацию о калориях".
  * 3 экран — "Подберите диету и следите за прогрессом".
* **Логика:** После последнего экрана — переход на главный экран.

### 3. **Экран главного экрана**

* **Цель:** Основной экран, где пользователь отслеживает свои калории и потребление пищи.
* **Дизайн:**

  * Визуально чистый, современный интерфейс в стиле минимализма.
  * Дневная цель по калориям, текущее потребление с прогресс-баром или круговой диаграммой.
  * Кнопки быстрого доступа:

    * Сканировать еду
    * История продуктов
    * Диеты
    * Аллергены
* **Логика:** Переходы на другие экраны (история, диеты, аллергены).

### 4. **Экран истории (History)**

* **Цель:** Отображение списка отсканированных продуктов с краткой информацией.
* **Дизайн:** Список продуктов с изображениями, калориями и коротким описанием (пищевые вещества).
* **Аллергены:** Включает список распространенных аллергенов (до 50 штук) с возможностью выбора для добавления в индивидуальный список.
* **Логика:** При клике на продукт — переход на экран с подробной информацией о продукте.

### 5. **Экран с подробной информацией о продукте**

* **Цель:** Показать подробную информацию о продукте, включая его калорийность, макронутриенты, аллергенность и рекомендации.
* **Дизайн:**

  * В верхней части экрана — большое изображение продукта.
  * Под изображением — описание продукта.
  * Калории, углеводы, жиры, белки, витамины и другие макронутриенты.
  * Полезные и вредные свойства продукта.
  * Список возможных аллергенов.
  * Рекомендации по замене продукта или его улучшению.
* **Логика:** Этот экран откроется как после сканирования продукта, так и при клике на продукт в истории. Информация будет загружаться из базы данных или получаться с сервера после сканирования.

### 6. **Экран диет**

* **Цель:** Заглушка для экрана диет, который будет доработан позже.
* **Дизайн:** Содержит временные заглушки, которые будут заменены функциональностью позже.
* **Логика:** Пока экран не содержит активной функциональности, это будет место для будущей логики работы с диетами.

### 7. **Экран аллергентов**

* **Цель:** Список основных аллергенов с возможностью добавления собственных.
* **Дизайн:** Список аллергенов с возможностью выбрать (галочки). Поле для добавления новых аллергенов вручную.
* **Логика:** Хранение выбранных аллергенов для дальнейшего использования при сканировании продуктов.

### 8. **Экран настроек**

* **Цель:** Управление настройками приложения.
* **Дизайн:**

  * Переключатель между светлой и темной темой.
  * Условия использования и политика конфиденциальности.
* **Логика:** Настройки сохраняются в локальном хранилище, и изменения применяются немедленно.

### 9. **Локализация**

* **Цель:** Автоматическое определение языка приложения на основе языка, установленного в системе устройства.
* **Логика:** Приложение автоматически устанавливает язык, основанный на настройках системы устройства. Этот язык передается в N8n для обработки изображений и отправки ответов на соответствующем языке.

### 10. **Тачбар и навигация**

* **Цель:** Быстрая навигация между основными экранами.
* **Дизайн:** Кастомный тачбар внизу экрана:

  * Центральная кнопка — "Сканировать продукт".
  * Слева: "Dashboard" и "Диеты".
  * Справа: "История" и "Аллергены".
* **Логика:** Переключение между экранами с помощью тапов на кнопки.

---

### Логика взаимодействия между экранами:

1. **Главный экран** — содержит основные элементы (цели, калории, и быстрые кнопки для других экранов).
2. **Сканирование продукта** — при нажатии на кнопку "Сканировать еду" открывается камера, фото отправляется в Firebase Storage и URL передается на сервер.
3. **История продуктов** — отображение списка отсканированных продуктов с возможностью отслеживания аллергенов и других свойств. При клике на продукт — переход на экран с подробной информацией.
4. **Экран с подробной информацией о продукте** — отображает подробную информацию о продукте, включая калории, макронутриенты, аллергены и рекомендации.
5. **Диеты** — пока используется как заглушка, будет доработано позже.
6. **Аллергены** — список аллергенов для выбора, можно добавлять новые аллергены вручную.
7. **Настройки** — возможность менять тему и получать информацию о политике конфиденциальности.

### Задание на разработку:

1. Создать **структуру приложения** на React Native с использованием Expo.
2. Реализовать **навигацию** между экранами (Stack Navigator).
3. Настроить **Firebase** для аналитики и хранения изображений.
4. Реализовать **работу с камерой** и **загрузку изображений** в Firebase Storage.
5. Настроить **серверную часть** (например, через N8n) для обработки изображений и возвращения данных (калории, макронутриенты).
6. Реализовать **локализацию** с автоматическим определением языка устройства и передачей данных в N8n для дальнейшей обработки.
7. Создать **кастомный тачбар** для навигации по экранам.
8. Разработать **интерфейсы** для всех экранов, с учетом простоты и удобства.
9. Сделать переключатель между **светлой и темной темой**.
10. Обеспечить **сохранение настроек** (темы, локализация) в локальном хранилище устройства.
11. Создать экран с **подробной информацией о продукте**, который открывается как после сканирования, так и по клику в истории.
12. Добавить **заглушку для экрана диет**, чтобы в будущем реализовать функциональность для диет и планирования питания.
