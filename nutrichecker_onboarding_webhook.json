{
  "name": "NutriChecker Onboarding Webhook",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "nutrichecker-onboarding",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "d7e93ce1-8c37-40e3-942b-1eeec26a8996",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        700,
        440
      ],
      "webhookId": "nutrichecker-onboarding"
    },
    {
      "parameters": {
        "functionCode": "// –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞\nconst payload = $input.first().json.body;\n\nconsole.log('üì• Received webhook:', JSON.stringify(payload, null, 2));\n\n// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è\nif (!payload.user || !payload.user.emailId) {\n  throw new Error('‚ùå Missing user.emailId');\n}\n\nif (!payload.event || !payload.event.type) {\n  throw new Error('‚ùå Missing event.type');\n}\n\nconst emailId = payload.user.emailId;\nconst eventType = payload.event.type;\n\nconsole.log(`üë§ User: ${emailId}, Event: ${eventType}`);\n\n// –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö —É–∑–ª–æ–≤\nreturn {\n  emailId: emailId,\n  eventType: eventType,\n  profile: payload.profile || {},\n  settings: payload.settings || {},\n  analytics: payload.analytics || {},\n  rawPayload: payload,\n  processedAt: new Date().toISOString()\n};"
      },
      "id": "c4a277d9-9ebd-4794-98ca-192942f0dd76",
      "name": "Process Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        940,
        440
      ]
    },
    {
      "parameters": {
        "url": "https://bespxpyftmnhbynchywl.supabase.co/rest/v1/profiles",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "supabaseApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "mailid",
              "value": "eq.{{ $json.emailId }}"
            },
            {
              "name": "select",
              "value": "uuid,mailid"
            }
          ]
        },
        "options": {}
      },
      "id": "get-user-uuid",
      "name": "Get User UUID",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1180,
        340
      ],
      "credentials": {
        "supabaseApi": {
          "id": "8RKkUwkeVmyvS58y",
          "name": "Supabase account NutriCheker"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "user-exists",
              "leftValue": "={{ $('Get User UUID').item.json[0] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-user-exists",
      "name": "Check User Exists",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1420,
        340
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://bespxpyftmnhbynchywl.supabase.co/rest/v1/profiles",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "supabaseApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Prefer",
              "value": "return=representation"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "mailid",
              "value": "={{ $('Process Data').item.json.emailId }}"
            },
            {
              "name": "created_at",
              "value": "={{ new Date().toISOString() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "create-user-profile",
      "name": "Create User Profile",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1660,
        240
      ],
      "credentials": {
        "supabaseApi": {
          "id": "8RKkUwkeVmyvS58y",
          "name": "Supabase account NutriCheker"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\nconst processData = $('Process Data').item.json;\nconst getUserResult = $('Get User UUID').item.json;\n\nlet userUuid;\nlet userMailid = processData.emailId;\n\n// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—à–ª–∏ –¥–∞–Ω–Ω—ã–µ\nconst inputNodeName = $input.first().node.name;\nconsole.log('üìç Input from node:', inputNodeName);\n\nif (inputNodeName === 'Check User Exists') {\n  // –ü—Ä–∏—à–ª–∏ –∏–∑ True Branch - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\n  if (getUserResult && getUserResult.uuid) {\n    userUuid = getUserResult.uuid;\n    console.log('‚úÖ Existing user found:', userUuid);\n  } else {\n    throw new Error('‚ùå User exists but UUID not found');\n  }\n} else if (inputNodeName === 'Create User Profile') {\n  // –ü—Ä–∏—à–ª–∏ –∏–∑ False Branch - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª —Å–æ–∑–¥–∞–Ω\n  const createUserResult = $input.first().json;\n  if (createUserResult && createUserResult.uuid) {\n    userUuid = createUserResult.uuid;\n    console.log('‚úÖ New user created:', userUuid);\n  } else {\n    throw new Error('‚ùå Failed to create user or get UUID');\n  }\n} else {\n  throw new Error('‚ùå Unknown input source: ' + inputNodeName);\n}\n\nreturn {\n  ...processData,\n  userUuid: userUuid,\n  userMailid: userMailid\n};"
      },
      "id": "3a537552-cd9b-46b9-a70c-d9248311c5ff",
      "name": "Merge User Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1960,
        840
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://bespxpyftmnhbynchywl.supabase.co/rest/v1/onboarding_users",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "supabaseApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Prefer",
              "value": "resolution=merge-duplicates,return=representation"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "mailid",
              "value": "={{ $('Merge User Data').item.json.userMailid }}"
            },
            {
              "name": "email_id",
              "value": "={{ $('Merge User Data').item.json.userMailid }}"
            },
            {
              "name": "paywall_reached_at",
              "value": "={{ $('Merge User Data').item.json.eventType === 'paywall_reached' ? new Date().toISOString() : null }}"
            },
            {
              "name": "completed_at",
              "value": "={{ $('Merge User Data').item.json.eventType === 'onboarding_completed' ? new Date().toISOString() : null }}"
            },
            {
              "name": "status",
              "value": "={{ $('Merge User Data').item.json.eventType === 'paywall_reached' ? 'paywall_reached' : ($('Merge User Data').item.json.eventType === 'onboarding_completed' ? 'completed' : 'in_progress') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4ca9ffa4-a8d9-40ac-9aef-4a7fe4924b88",
      "name": "Save User",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2140,
        340
      ],
      "credentials": {
        "supabaseApi": {
          "id": "8RKkUwkeVmyvS58y",
          "name": "Supabase account NutriCheker"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://bespxpyftmnhbynchywl.supabase.co/rest/v1/webhook_events",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "supabaseApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Prefer",
              "value": "return=representation"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "user_id",
              "value": "={{ $('Save User').item.json[0].id }}"
            },
            {
              "name": "event_type",
              "value": "={{ $('Merge User Data').item.json.eventType }}"
            },
            {
              "name": "payload",
              "value": "={{ JSON.stringify($('Merge User Data').item.json.rawPayload) }}"
            },
            {
              "name": "webhook_url",
              "value": "n8n_processed"
            },
            {
              "name": "success",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "92b62ba0-e746-439c-9368-a1cbe0d059a2",
      "name": "Log Webhook",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2380,
        340
      ],
      "credentials": {
        "supabaseApi": {
          "id": "8RKkUwkeVmyvS58y",
          "name": "Supabase account NutriCheker"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"message\": \"Onboarding data processed\",\n  \"user\": {\n    \"emailId\": \"{{ $('Merge User Data').item.json.userMailid }}\",\n    \"eventType\": \"{{ $('Merge User Data').item.json.eventType }}\",\n    \"uuid\": \"{{ $('Merge User Data').item.json.userUuid }}\"\n  },\n  \"timestamp\": \"{{ new Date().toISOString() }}\"\n}",
        "options": {}
      },
      "id": "17b8fb18-0836-4348-81ac-ba0ba1f1fb9f",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        2620,
        340
      ]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Process Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Data": {
      "main": [
        [
          {
            "node": "Get User UUID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get User UUID": {
      "main": [
        [
          {
            "node": "Check User Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check User Exists": {
      "main": [
        [
          {
            "node": "Merge User Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create User Profile",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create User Profile": {
      "main": [
        [
          {
            "node": "Merge User Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge User Data": {
      "main": [
        [
          {
            "node": "Save User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save User": {
      "main": [
        [
          {
            "node": "Log Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Webhook": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3f98e65bbc53fb913ce632c695b32ab3b2d3d92ced38c3d4d86ebd2965460fa1"
  },
  "id": "nutrichecker-onboarding",
  "tags": [
    {
      "createdAt": "2024-12-25T10:00:00.000Z",
      "updatedAt": "2024-12-25T10:00:00.000Z",
      "id": "nutrichecker",
      "name": "nutrichecker"
    }
  ]
} 